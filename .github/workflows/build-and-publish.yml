name: Build
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [7, 8, 9, 10, 11, 12, 13]
    name: Java ${{ matrix.java }} build
    steps:
      - uses: actions/checkout@v2
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Build
        run: mvn package
  publish:
    runs-on: ubuntu-latest
    #if: startsWith(github.event.ref, 'refs/tags')
    name: Publish to GitHub Packages
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Import GPG key
        run: |
          sudo apt-get install -y gpg
          echo ${{ secrets.GPG_PRIVATE_KEY }} | gpg --import --batch --yes
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Publish package
        run: |
          mvn versions:set -DnewVersion=0.3.0
          mvn -B deploy -Dpassed.gpg.passphrase=${{ secrets.GPG_PASSWORD }}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          body: ""  # TODO get git commit messages here automatically
#          draft: true
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./target/pecoff4j-${{ github.ref }}.jar
#          asset_name: pecoff4j-${{ github.ref }}.jar
#          asset_content_type: application/java-archive
